---
- name: Handling rsi,rre,tde first
  hosts: rsi{{ scanner_no }},rre{{ scanner_no }},tde{{ scanner_no }}
  gather_facts: true
  become: true
  vars:
    default_package_file: "/opt/playbooks/rpm_packages/packages.txt"
    package_file: "{{ package_path | default(default_package_file) }}"

  tasks:
    - name: Backup Packager State before Change
      package_facts:
        manager: auto
      register: package_facts_result
      ignore_errors: true

    - name: Backup Packager State before Change (Step 2)
      template:
        src: soft_facts.j2
        dest: "/opt/statebackup/software/upgrade_scanner_before_{{ ansible_date_time.date }}_{{ ansible_date_time.time }}_{{ inventory_hostname }}"
      delegate_to: localhost
      ignore_errors: true

    - name: Read package names from the file
      delegate_to: localhost
      set_fact:
        package_names: "{{ lookup('file', package_file).splitlines() }}"

    - name: Remove the packages
      become: true
      yum:
        name: "{{ item }}"
        state: absent
      loop: "{{ package_names }}"
      loop_control:
        loop_var: item


    - name: Install the packages
      become: true
      yum:
        name: "{{ item }}"
        state: present
      loop: "{{ package_names }}"
      loop_control:
        loop_var: item

    - name: Backup Packager State after Change
      package_facts:
        manager: auto
      register: package_facts_result
      ignore_errors: true

    - name: Backup Packager State after Change (Step 2)
      template:
        src: soft_facts.j2
        dest: "/opt/statebackup/software/upgrade_scanner_after{{ ansible_date_time.date }}_{{ ansible_date_time.time }}_{{ inventory_hostname }}"
      delegate_to: localhost
      ignore_errors: true


- name: Handling rec server at the end
  hosts: rec{{ scanner_no }}
  gather_facts: true
  become: true
  vars:
    default_package_file: "/opt/playbooks/rpm_packages/packages.txt"
    package_file: "{{ package_path | default(default_package_file) }}"

  tasks:
    - name: Backup Packager State before Change
      package_facts:
        manager: auto
      register: package_facts_result
      ignore_errors: true

    - name: Backup Packager State before Change (Step 2)
      template:
        src: soft_facts.j2
        dest: "/opt/statebackup/software/upgrade_scanner_before_using_pkg_file{{ ansible_date_time.date }}_{{ ansible_date_time.time }}_{{ inventory_hostname }}"
      delegate_to: localhost
      ignore_errors: true

    - name: Read package names from the file
      delegate_to: localhost
      set_fact:
        package_names: "{{ lookup('file', package_file).splitlines() }}"

    - name: Remove the packages
      become: true
      yum:
        name: "{{ item }}"
        state: absent
      loop: "{{ package_names }}"
      loop_control:
        loop_var: item


    - name: Install the packages
      become: true
      yum:
        name: "{{ item }}"
        state: present
      loop: "{{ package_names }}"
      loop_control:
        loop_var: item 
     
    - name: Backup Packager State after Change
      package_facts:
        manager: auto
      register: package_facts_result
      ignore_errors: true

    - name: Backup Packager State after Change (Step 2)
      template:
        src: soft_facts.j2
        dest: "/opt/statebackup/software/upgrade_scanner_after_using_pkg_file{{ ansible_date_time.date }}_{{ ansible_date_time.time }}_{{ inventory_hostname }}"
      delegate_to: localhost
      ignore_errors: true
