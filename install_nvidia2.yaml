---
- name: Setup Host for NVIDIA Driver
  hosts: rre{{ scanner_number }}
  become: true

  vars:
    major_version: 1
    minor_version: 0
    tick_version: 4
    log_directory: /var/rtt/log
    logfile: "{{ log_directory }}/{{ inventory_hostname }}.{{ ansible_date_time.date }}.log"
    kernel_releases: 3.10.0-1160.76.1.el7.x86_64
    centos_releases: 7-9.2009.1.el7.centos-x86_64
    rpms_installing: NVIDIA-440.44

  tasks:
    - name: Make sure log directory exists
      file:
        path: "{{ log_directory }}"
        state: directory
        mode: "0755"
        owner: rtt
        group: rtt

    - name: Check if the system is running a valid kernel and CentOS version
      block:
        - name: Get kernel release
          command: uname -r
          register: kernel_release

        - name: Print kernel release
          debug:
            var: kernel_release.stdout

        - name: Get CentOS release
          command: rpm -q --qf "%{VERSION}-%{RELEASE}-%{ARCH}" centos-release
          register: centos_release

        - name: Print CentOS release
          debug:
            var: centos_release.stdout

        - name: Verify kernel release
          assert:
            that: kernel_release.stdout_lines[0] in kernel_releases
            fail_msg: "Invalid kernel release detected: {{ kernel_release.stdout_lines[0] }}"

        - name: Verify CentOS release
          assert:
            that: centos_release.stdout_lines[0] in centos_releases
            fail_msg: "Invalid CentOS release detected: {{ centos_release.stdout_lines[0] }}"

- name: Install required packages and NVIDIA driver
  hosts: rre{{ scanner_number }}
  become: true
  tasks:
    - name: Backup Packager State before Change
      package_facts:
        manager: auto
      register: package_facts_result
      ignore_errors: true

    - name: Backup Packager State before Change (Step 2)
      template:
        src: soft_facts.j2
        dest: "/opt/statebackup/software/nvidia_drivers_before_{{ ansible_date_time.date }}_{{ ansible_date_time.time }}_{{ inventory_hostname }}"
      delegate_to: localhost
      ignore_errors: true

    - name: Install required packages
      yum:
        name:
          - kernel-devel
          - gcc
          - kernel-headers
          - make
        state: present

    - name: Download NVIDIA Script
      ansible.builtin.copy:
        src: /home/scripts/NVIDIA-Linux-x86_64-440.44-no-compat32.run
        dest: /opt/NVIDIA-Linux-x86_64-440.44-no-compat32.run

    - name: Set execute permissions on the script
      file:
        path: /opt/NVIDIA-Linux-x86_64-440.44-no-compat32.run
        mode: '0755'

    - name: Install NVIDIA Driver
      become: true
      command: "/opt/NVIDIA-Linux-x86_64-440.44-no-compat32.run --no-opengl-files --no-questions --ui=none --accept-license"
      args:
        chdir: "/tmp"
    - name: Backup Packager State after Change
      package_facts:
        manager: auto
      register: package_facts_result
      ignore_errors: true

    - name: Backup Packager State after Change (Step 2)
      template:
        src: soft_facts.j2
        dest: "/opt/statebackup/software/nvidia_drivers_after{{ ansible_date_time.date }}_{{ ansible_date_time.time }}_{{ inventory_hostname }}"
      delegate_to: localhost
      ignore_errors: true

    - name: Reboot the system
      command: "reboot"
      async: 0
      poll: 0
